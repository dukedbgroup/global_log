<!DOCTYPE html><html>
      <head>
        <meta http-equiv="Content-type" content="text/html; charset=utf-8"/><link rel="stylesheet" href="../static/bootstrap.min.css" type="text/css"/><link rel="stylesheet" href="../static/vis.min.css" type="text/css"/><link rel="stylesheet" href="../static/webui.css" type="text/css"/><link rel="stylesheet" href="../static/timeline-view.css" type="text/css"/><script src="../static/sorttable.js"></script><script src="../static/jquery-1.11.1.min.js"></script><script src="../static/vis.min.js"></script><script src="../static/bootstrap-tooltip.js"></script><script src="../static/initialize-tooltips.js"></script><script src="../static/table.js"></script><script src="../static/additional-metrics.js"></script><script src="../static/timeline-view.js"></script>
        <link rel="stylesheet" href="../static/spark-dag-viz.css" type="text/css"/><script src="../static/d3.min.js"></script><script src="../static/dagre-d3.min.js"></script><script src="../static/graphlib-dot.min.js"></script><script src="../static/spark-dag-viz.js"></script>
        <title>MemoryOnly - Details for Stage 0 (Attempt 0)</title>
      </head>
      <body>
        <div class="navbar navbar-static-top">
          <div class="navbar-inner">
            <div class="brand">
              <a href="../index.html" class="brand">
                <img src="../static/spark-logo-77x50px-hd.png"/>
                <span class="version">1.4.0</span>
              </a>
            </div>
            <ul class="nav"><li class="">
        <a href="../img/glyphicons-halflings-white.png">Jobs</a>
      </li><li class="active">
        <a href="index.html">Stages</a>
      </li><li class="">
        <a href="../storage/index.html">Storage</a>
      </li><li class="">
        <a href="../environment/index.html">Environment</a>
      </li><li class="">
        <a href="../executors/index.html">Executors</a>
      </li></ul>
            <p class="navbar-text pull-right">
              <strong title="MemoryOnly">MemoryOnly</strong> application UI
            </p>
          </div>
        </div>
        <div class="container-fluid">
          <div class="row-fluid">
            <div class="span12">
              <h3 style="vertical-align: bottom; display: inline-block;">
                Details for Stage 0 (Attempt 0)
                
              </h3>
            </div>
          </div>
          <div>
          <ul class="unstyled">
            <li>
              <strong>Total Time Across All Tasks: </strong>
              1.2 min
            </li>
            <li>
                <strong>Input Size / Records: </strong>
                114.4 MB / 20000000
              </li>
            
            
            <li>
                <strong>Shuffle Write: </strong>
                 223.0 MB / 20000000
              </li>
            
          </ul>
        </div><div>
      <span class="expand-dag-viz" onclick="toggleDagViz(false);">
        <span class="expand-dag-viz-arrow arrow-closed"></span>
        <a data-toggle="tooltip" title="Shows a graph of RDD operations in this stage, and RDDs inside each one. A stage can run
       multiple operations (e.g. two map() functions) if they can be pipelined. Some operations
       also create multiple RDDs internally. Cached RDDs are shown in green.
    " data-placement="right">
          DAG Visualization
        </a>
      </span>
      <div id="dag-viz-graph"></div>
      <div id="dag-viz-metadata" style="display:none">
        <div class="stage-metadata" stage-id="0" skipped="false">
              <div class="dot-file">digraph G {
  subgraph clusterstage_0 {
    label=&quot;Stage 0&quot;;
    subgraph cluster1 {
      label=&quot;repartition&quot;;
      2 [label=&quot;MapPartitionsRDD [2]&quot;];
    }
    subgraph cluster0 {
      label=&quot;textFile&quot;;
      0 [label=&quot;s3n://AKIAJBEVLNVRCXMDQLUQ:jI49bwmN1LE0kuPE3MofEhuQLTeWMqFEORcuvHbs@jung-spark/storage_level/input/*.txt [0]&quot;];
      1 [label=&quot;MapPartitionsRDD [1]&quot;];
    }
    subgraph cluster0 {
      label=&quot;textFile&quot;;
      0 [label=&quot;s3n://AKIAJBEVLNVRCXMDQLUQ:jI49bwmN1LE0kuPE3MofEhuQLTeWMqFEORcuvHbs@jung-spark/storage_level/input/*.txt [0]&quot;];
      1 [label=&quot;MapPartitionsRDD [1]&quot;];
    }
  }
  1-&gt;2;
  0-&gt;1;
}</div>
              
              
              
            </div>
      </div>
    </div><div>
          <span class="expand-additional-metrics">
            <span class="expand-additional-metrics-arrow arrow-closed"></span>
            <a>Show Additional Metrics</a>
          </span>
          <div class="additional-metrics collapsed">
            <ul>
              <li>
                  <input type="checkbox" id="select-all-metrics"/>
                  <span class="additional-metric-title"><em>(De)select All</em></span>
              </li>
              <li>
                <span data-toggle="tooltip" title="Scheduler delay includes time to ship the task from the scheduler to
       the executor, and time to send the task result from the executor to the scheduler. If
       scheduler delay is large, consider decreasing the size of tasks or decreasing the size
       of task results." data-placement="right">
                  <input type="checkbox" name="scheduler_delay"/>
                  <span class="additional-metric-title">Scheduler Delay</span>
                </span>
              </li>
              <li>
                <span data-toggle="tooltip" title="Time spent deserializing the task closure on the executor, including the time to read the
       broadcasted task." data-placement="right">
                  <input type="checkbox" name="deserialization_time"/>
                  <span class="additional-metric-title">Task Deserialization Time</span>
                </span>
              </li>
              
              <li>
                <span data-toggle="tooltip" title="Time spent serializing the task result on the executor before sending it back to the
       driver." data-placement="right">
                  <input type="checkbox" name="serialization_time"/>
                  <span class="additional-metric-title">Result Serialization Time</span>
                </span>
              </li>
              <li>
                <span data-toggle="tooltip" title="Time that the driver spends fetching task results from workers. If this is large, consider
       decreasing the amount of data returned from each task." data-placement="right">
                  <input type="checkbox" name="getting_result_time"/>
                  <span class="additional-metric-title">Getting Result Time</span>
                </span>
              </li>
            </ul>
          </div>
        </div><span class="expand-task-assignment-timeline">
      <span class="expand-task-assignment-timeline-arrow arrow-closed"></span>
      <a>Event Timeline</a>
    </span><div id="task-assignment-timeline" class="collapsed">
      
      <div class="control-panel">
        <div id="task-assignment-timeline-zoom-lock">
          <input type="checkbox"></input>
          <span>Enable zooming</span>
        </div>
      </div>
      <div class="legend-area">
      <svg>
        <rect x="5px" y="10px" width="10px" height="10px" class="scheduler-delay-proportion"></rect><text x="25px" y="20px">Scheduler Delay</text><rect x="5px" y="25px" width="10px" height="10px" class="deserialization-time-proportion"></rect><text x="25px" y="35px">Task Deserialization Time</text><rect x="5px" y="40px" width="10px" height="10px" class="shuffle-read-time-proportion"></rect><text x="25px" y="50px">Shuffle Read Time</text><rect x="215px" y="10px" width="10px" height="10px" class="executor-runtime-proportion"></rect><text x="235px" y="20px">Executor Computing Time</text><rect x="215px" y="25px" width="10px" height="10px" class="shuffle-write-time-proportion"></rect><text x="235px" y="35px">Shuffle Write Time</text><rect x="215px" y="40px" width="10px" height="10px" class="serialization-time-proportion"></rect><text x="235px" y="50px">Result Serialization TIme</text><rect x="425px" y="10px" width="10px" height="10px" class="getting-result-time-proportion"></rect><text x="445px" y="20px">Getting Result Time</text>
      </svg>
    </div>
    </div><script type="text/javascript">
      drawTaskAssignmentTimeline([
            {
              'id': '0',
              'content': '0 / 172.31.39.56',
            }
          ,
            {
              'id': '1',
              'content': '1 / 172.31.39.57',
            }
          ], [
             {
               'className': 'task task-assignment-timeline-object',
               'group': '0',
               'content': '<div class="task-assignment-timeline-content"' +
                 'data-toggle="tooltip" data-placement="top"' +
                 'data-html="true" data-container="body"' +
                 'data-title="Task 3 (attempt 0)<br>' +
                 'Status: SUCCESS<br>' +
                 'Launch Time: 2015/08/14 01:44:05' +
                 '<br>Finish Time: 2015/08/14 01:44:24' +
                 '<br>Scheduler Delay: 289 ms' +
                 '<br>Task Deserialization Time: 0.9 s' +
                 '<br>Shuffle Read Time: 0 ms' +
                 '<br>Executor Computing Time: 15 s' +
                 '<br>Shuffle Write Time: 3 s' +
                 '<br>Result Serialization Time: 1 ms' +
                 '<br>Getting Result Time: 0 ms">' +
                 '<svg class="task-assignment-timeline-duration-bar">' +
                 '<rect class="scheduler-delay-proportion" ' +
                   'x="0%" y="0px" height="26px"' +
                   'width="1.5060711866173424%""></rect>' +
                 '<rect class="deserialization-time-proportion" '+
                   'x="1.5060711866173424%" y="0px" height="26px"' +
                   'width="4.471311688988483%"></rect>' +
                 '<rect class="shuffle-read-time-proportion" ' +
                   'x="5.977382875605826%" y="0px" height="26px"' +
                   'width="0.0%"></rect>' +
                 '<rect class="executor-runtime-proportion" ' +
                   'x="5.977382875605826%" y="0px" height="26px"' +
                   'width="79.24852780238677%"></rect>' +
                 '<rect class="shuffle-write-time-proportion" ' +
                   'x="85.2259106779926%" y="0px" height="26px"' +
                   'width="14.768878003022564%"></rect>' +
                 '<rect class="serialization-time-proportion" ' +
                   'x="99.99478868101517%" y="0px" height="26px"' +
                   'width="0.005211318984835062%"></rect>' +
                 '<rect class="getting-result-time-proportion" ' +
                   'x="100.0%" y="0px" height="26px"' +
                   'width="0.0%"></rect></svg>',
               'start': new Date(1439516645733),
               'end': new Date(1439516664922)
             }
           ,
             {
               'className': 'task task-assignment-timeline-object',
               'group': '0',
               'content': '<div class="task-assignment-timeline-content"' +
                 'data-toggle="tooltip" data-placement="top"' +
                 'data-html="true" data-container="body"' +
                 'data-title="Task 2 (attempt 0)<br>' +
                 'Status: SUCCESS<br>' +
                 'Launch Time: 2015/08/14 01:44:05' +
                 '<br>Finish Time: 2015/08/14 01:44:25' +
                 '<br>Scheduler Delay: 282 ms' +
                 '<br>Task Deserialization Time: 0.9 s' +
                 '<br>Shuffle Read Time: 0 ms' +
                 '<br>Executor Computing Time: 15 s' +
                 '<br>Shuffle Write Time: 3 s' +
                 '<br>Result Serialization Time: 0 ms' +
                 '<br>Getting Result Time: 0 ms">' +
                 '<svg class="task-assignment-timeline-duration-bar">' +
                 '<rect class="scheduler-delay-proportion" ' +
                   'x="0%" y="0px" height="26px"' +
                   'width="1.4597784449735984%""></rect>' +
                 '<rect class="deserialization-time-proportion" '+
                   'x="1.4597784449735984%" y="0px" height="26px"' +
                   'width="4.441453566621804%"></rect>' +
                 '<rect class="shuffle-read-time-proportion" ' +
                   'x="5.901232011595402%" y="0px" height="26px"' +
                   'width="0.0%"></rect>' +
                 '<rect class="executor-runtime-proportion" ' +
                   'x="5.901232011595402%" y="0px" height="26px"' +
                   'width="79.35604099803292%"></rect>' +
                 '<rect class="shuffle-write-time-proportion" ' +
                   'x="85.25727300962832%" y="0px" height="26px"' +
                   'width="14.742726990371674%"></rect>' +
                 '<rect class="serialization-time-proportion" ' +
                   'x="100.0%" y="0px" height="26px"' +
                   'width="0.0%"></rect>' +
                 '<rect class="getting-result-time-proportion" ' +
                   'x="100.0%" y="0px" height="26px"' +
                   'width="0.0%"></rect></svg>',
               'start': new Date(1439516645730),
               'end': new Date(1439516665048)
             }
           ,
             {
               'className': 'task task-assignment-timeline-object',
               'group': '1',
               'content': '<div class="task-assignment-timeline-content"' +
                 'data-toggle="tooltip" data-placement="top"' +
                 'data-html="true" data-container="body"' +
                 'data-title="Task 1 (attempt 0)<br>' +
                 'Status: SUCCESS<br>' +
                 'Launch Time: 2015/08/14 01:44:05' +
                 '<br>Finish Time: 2015/08/14 01:44:24' +
                 '<br>Scheduler Delay: 297 ms' +
                 '<br>Task Deserialization Time: 0.9 s' +
                 '<br>Shuffle Read Time: 0 ms' +
                 '<br>Executor Computing Time: 16 s' +
                 '<br>Shuffle Write Time: 1 s' +
                 '<br>Result Serialization Time: 2 ms' +
                 '<br>Getting Result Time: 0 ms">' +
                 '<svg class="task-assignment-timeline-duration-bar">' +
                 '<rect class="scheduler-delay-proportion" ' +
                   'x="0%" y="0px" height="26px"' +
                   'width="1.6129908217020565%""></rect>' +
                 '<rect class="deserialization-time-proportion" '+
                   'x="1.6129908217020565%" y="0px" height="26px"' +
                   'width="4.876989083799489%"></rect>' +
                 '<rect class="shuffle-read-time-proportion" ' +
                   'x="6.489979905501546%" y="0px" height="26px"' +
                   'width="0.0%"></rect>' +
                 '<rect class="executor-runtime-proportion" ' +
                   'x="6.489979905501546%" y="0px" height="26px"' +
                   'width="87.17210666377017%"></rect>' +
                 '<rect class="shuffle-write-time-proportion" ' +
                   'x="93.66208656927171%" y="0px" height="26px"' +
                   'width="6.3270515396730564%"></rect>' +
                 '<rect class="serialization-time-proportion" ' +
                   'x="99.98913810894476%" y="0px" height="26px"' +
                   'width="0.010861891055232716%"></rect>' +
                 '<rect class="getting-result-time-proportion" ' +
                   'x="99.99999999999999%" y="0px" height="26px"' +
                   'width="0.0%"></rect></svg>',
               'start': new Date(1439516645718),
               'end': new Date(1439516664131)
             }
           ,
             {
               'className': 'task task-assignment-timeline-object',
               'group': '1',
               'content': '<div class="task-assignment-timeline-content"' +
                 'data-toggle="tooltip" data-placement="top"' +
                 'data-html="true" data-container="body"' +
                 'data-title="Task 0 (attempt 0)<br>' +
                 'Status: SUCCESS<br>' +
                 'Launch Time: 2015/08/14 01:44:05' +
                 '<br>Finish Time: 2015/08/14 01:44:24' +
                 '<br>Scheduler Delay: 302 ms' +
                 '<br>Task Deserialization Time: 0.9 s' +
                 '<br>Shuffle Read Time: 0 ms' +
                 '<br>Executor Computing Time: 16 s' +
                 '<br>Shuffle Write Time: 1 s' +
                 '<br>Result Serialization Time: 0 ms' +
                 '<br>Getting Result Time: 0 ms">' +
                 '<svg class="task-assignment-timeline-duration-bar">' +
                 '<rect class="scheduler-delay-proportion" ' +
                   'x="0%" y="0px" height="26px"' +
                   'width="1.6327854671280244%""></rect>' +
                 '<rect class="deserialization-time-proportion" '+
                   'x="1.6327854671280244%" y="0px" height="26px"' +
                   'width="4.892949826989619%"></rect>' +
                 '<rect class="shuffle-read-time-proportion" ' +
                   'x="6.525735294117643%" y="0px" height="26px"' +
                   'width="0.0%"></rect>' +
                 '<rect class="executor-runtime-proportion" ' +
                   'x="6.525735294117643%" y="0px" height="26px"' +
                   'width="86.69982698961938%"></rect>' +
                 '<rect class="shuffle-write-time-proportion" ' +
                   'x="93.22556228373702%" y="0px" height="26px"' +
                   'width="6.774437716262975%"></rect>' +
                 '<rect class="serialization-time-proportion" ' +
                   'x="100.0%" y="0px" height="26px"' +
                   'width="0.0%"></rect>' +
                 '<rect class="getting-result-time-proportion" ' +
                   'x="100.0%" y="0px" height="26px"' +
                   'width="0.0%"></rect></svg>',
               'start': new Date(1439516645693),
               'end': new Date(1439516664189)
             }
           ], 1439516645693, 1439516665048)
    </script><h4>Summary Metrics for 4 Completed Tasks</h4><div><table class="table table-bordered table-condensed sortable" id="task-summary-table">
      <thead><th width="16.666666666666668%" class="">Metric</th><th width="16.666666666666668%" class="">Min</th><th width="16.666666666666668%" class="">25th percentile</th><th width="16.666666666666668%" class="">Median</th><th width="16.666666666666668%" class="">75th percentile</th><th width="16.666666666666668%" class="">Max</th></thead>
      <tbody>
        <tr><td>Duration</td><td>17 s</td><td>17 s</td><td>18 s</td><td>18 s</td><td>18 s</td></tr><tr class="scheduler_delay"><td><span data-toggle="tooltip" title="Scheduler delay includes time to ship the task from the scheduler to
       the executor, and time to send the task result from the executor to the scheduler. If
       scheduler delay is large, consider decreasing the size of tasks or decreasing the size
       of task results." data-placement="right">Scheduler Delay</span></td><td>0.3 s</td><td>0.3 s</td><td>0.3 s</td><td>0.3 s</td><td>0.3 s</td></tr><tr class="deserialization_time">
              <td>
              <span data-toggle="tooltip" title="Time spent deserializing the task closure on the executor, including the time to read the
       broadcasted task." data-placement="right">
                Task Deserialization Time
              </span>
            </td><td>0.9 s</td><td>0.9 s</td><td>0.9 s</td><td>0.9 s</td><td>0.9 s</td>
            </tr><tr><td>
              <span data-toggle="tooltip" title="Time that the executor spent paused for Java garbage collection while the task was
       running." data-placement="right">GC Time
              </span>
            </td><td>0.3 s</td><td>0.3 s</td><td>0.3 s</td><td>0.3 s</td><td>0.3 s</td></tr><tr class="serialization_time">
              <td>
              <span data-toggle="tooltip" title="Time spent serializing the task result on the executor before sending it back to the
       driver." data-placement="right">
                Result Serialization Time
              </span>
            </td><td>0 ms</td><td>0 ms</td><td>1 ms</td><td>2 ms</td><td>2 ms</td>
            </tr><tr class="getting_result_time"><td>
              <span data-toggle="tooltip" title="Time that the driver spends fetching task results from workers. If this is large, consider
       decreasing the amount of data returned from each task." data-placement="right">
                Getting Result Time
              </span>
            </td><td>0 ms</td><td>0 ms</td><td>0 ms</td><td>0 ms</td><td>0 ms</td></tr><tr><td>Input Size / Records</td><td>28.6 MB / 5000000</td><td>28.6 MB / 5000000</td><td>28.6 MB / 5000000</td><td>28.6 MB / 5000000</td><td>28.6 MB / 5000000</td></tr><tr><td>Shuffle Write Size / Records</td><td>55.7 MB / 5000000</td><td>55.7 MB / 5000000</td><td>55.7 MB / 5000000</td><td>55.7 MB / 5000000</td><td>55.7 MB / 5000000</td></tr>
      </tbody>
    </table></div><h4>Aggregated Metrics by Executor</h4><table class="table table-bordered table-condensed sortable table-striped">
      <thead>
        <th>Executor ID</th>
        <th>Address</th>
        <th>Task Time</th>
        <th>Total Tasks</th>
        <th>Failed Tasks</th>
        <th>Succeeded Tasks</th>
        <th>
            <span data-toggle="tooltip" title="Bytes and records read from Hadoop or from Spark storage.">Input Size / Records</span>
          </th>
        
        
        <th>
            <span data-toggle="tooltip" title="Bytes and records written to disk in order to be read by a shuffle in a future stage.">
            Shuffle Write Size / Records</span>
          </th>
        
      </thead>
      <tbody>
        <tr>
            <td>0</td>
            <td>172.31.39.56:36858</td>
            <td sorttable_customkey="38507">39 s</td>
            <td>2</td>
            <td>0</td>
            <td>2</td>
            <td sorttable_customkey="60000000">
                57.2 MB / 10000000
              </td>
            
            
            <td sorttable_customkey="116905382">
                111.5 MB / 10000000
              </td>
            
          </tr><tr>
            <td>1</td>
            <td>172.31.39.57:49075</td>
            <td sorttable_customkey="36909">37 s</td>
            <td>2</td>
            <td>0</td>
            <td>2</td>
            <td sorttable_customkey="60000000">
                57.2 MB / 10000000
              </td>
            
            
            <td sorttable_customkey="116905654">
                111.5 MB / 10000000
              </td>
            
          </tr>
      </tbody>
    </table><h4>Tasks</h4><table class="table table-bordered table-condensed sortable table-striped">
      <thead><th width="" class="">Index</th><th width="" class="">ID</th><th width="" class="">Attempt</th><th width="" class="">Status</th><th width="" class="">Locality Level</th><th width="" class="">Executor ID / Host</th><th width="" class="">Launch Time</th><th width="" class="">Duration</th><th width="" class="scheduler_delay">Scheduler Delay</th><th width="" class="deserialization_time">Task Deserialization Time</th><th width="" class="">GC Time</th><th width="" class="serialization_time">Result Serialization Time</th><th width="" class="getting_result_time">Getting Result Time</th><th width="" class="">Input Size / Records</th><th width="" class="">Write Time</th><th width="" class="">Shuffle Write Size / Records</th><th width="" class="">Errors</th></thead>
      <tbody>
        <tr>
        <td>0</td>
        <td>0</td>
        <td sorttable_customkey="0">0</td>
        <td>SUCCESS</td>
        <td>PROCESS_LOCAL</td>
        <td>1 / 172.31.39.57</td>
        <td>2015/08/14 01:44:05</td>
        <td sorttable_customkey="17289">
          17 s
        </td>
        <td sorttable_customkey="302" class="scheduler_delay">
          0.3 s
        </td>
        <td sorttable_customkey="905" class="deserialization_time">
          0.9 s
        </td>
        <td sorttable_customkey="277">
          0.3 s
        </td>
        <td sorttable_customkey="0" class="serialization_time">
          0 ms
        </td>
        <td sorttable_customkey="0" class="getting_result_time">
          0 ms
        </td>
        
        <td sorttable_customkey="30000000">
            28.6 MB (hadoop) / 5000000
          </td>
        
        
        <td sorttable_customkey="1253861973">
             1 s
           </td><td sorttable_customkey="58452173">
             55.7 MB / 5000000
           </td>
        
        <td> </td>
      </tr><tr>
        <td>1</td>
        <td>1</td>
        <td sorttable_customkey="0">0</td>
        <td>SUCCESS</td>
        <td>PROCESS_LOCAL</td>
        <td>1 / 172.31.39.57</td>
        <td>2015/08/14 01:44:05</td>
        <td sorttable_customkey="17216">
          17 s
        </td>
        <td sorttable_customkey="297" class="scheduler_delay">
          0.3 s
        </td>
        <td sorttable_customkey="898" class="deserialization_time">
          0.9 s
        </td>
        <td sorttable_customkey="277">
          0.3 s
        </td>
        <td sorttable_customkey="2" class="serialization_time">
          2 ms
        </td>
        <td sorttable_customkey="0" class="getting_result_time">
          0 ms
        </td>
        
        <td sorttable_customkey="30000000">
            28.6 MB (hadoop) / 5000000
          </td>
        
        
        <td sorttable_customkey="1165519119">
             1 s
           </td><td sorttable_customkey="58453481">
             55.7 MB / 5000000
           </td>
        
        <td> </td>
      </tr><tr>
        <td>2</td>
        <td>2</td>
        <td sorttable_customkey="0">0</td>
        <td>SUCCESS</td>
        <td>PROCESS_LOCAL</td>
        <td>0 / 172.31.39.56</td>
        <td>2015/08/14 01:44:05</td>
        <td sorttable_customkey="18178">
          18 s
        </td>
        <td sorttable_customkey="282" class="scheduler_delay">
          0.3 s
        </td>
        <td sorttable_customkey="858" class="deserialization_time">
          0.9 s
        </td>
        <td sorttable_customkey="275">
          0.3 s
        </td>
        <td sorttable_customkey="0" class="serialization_time">
          0 ms
        </td>
        <td sorttable_customkey="0" class="getting_result_time">
          0 ms
        </td>
        
        <td sorttable_customkey="30000000">
            28.6 MB (hadoop) / 5000000
          </td>
        
        
        <td sorttable_customkey="2848758495">
             3 s
           </td><td sorttable_customkey="58453919">
             55.7 MB / 5000000
           </td>
        
        <td> </td>
      </tr><tr>
        <td>3</td>
        <td>3</td>
        <td sorttable_customkey="0">0</td>
        <td>SUCCESS</td>
        <td>PROCESS_LOCAL</td>
        <td>0 / 172.31.39.56</td>
        <td>2015/08/14 01:44:05</td>
        <td sorttable_customkey="18041">
          18 s
        </td>
        <td sorttable_customkey="289" class="scheduler_delay">
          0.3 s
        </td>
        <td sorttable_customkey="858" class="deserialization_time">
          0.9 s
        </td>
        <td sorttable_customkey="275">
          0.3 s
        </td>
        <td sorttable_customkey="1" class="serialization_time">
          1 ms
        </td>
        <td sorttable_customkey="0" class="getting_result_time">
          0 ms
        </td>
        
        <td sorttable_customkey="30000000">
            28.6 MB (hadoop) / 5000000
          </td>
        
        
        <td sorttable_customkey="2834434432">
             3 s
           </td><td sorttable_customkey="58451463">
             55.7 MB / 5000000
           </td>
        
        <td> </td>
      </tr>
      </tbody>
    </table>
        </div>
      </body>
    </html>
